buildscript {
    dependencies {
        //spring boot plugin
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${global_springBootGradleVersion}")
        //热部署
        classpath("org.springframework:springloaded:${global_springLoadedVersion}")
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
//热部署目录保持和src一样
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
        testOutputDir = file("$buildDir/classes/test/")
    }
}
//spring boot 配置项
bootRun {
    addResources = true
    jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile("junit:junit:${global_junitVersion}")

    compile("ch.qos.logback:logback-classic:${global_logbackVersion}")
    compile("ch.qos.logback:logback-core:${global_logbackVersion}")
    compile("log4j:log4j:${global_log4jVersion}")

    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")

    compile("commons-io:commons-io:${global_commonIOVersion}")
}

